"""
Django settings for votewind project.

Generated by 'django-admin startproject' using Django 3.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

import os
from dotenv import load_dotenv
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Load environment variables from file if it exists
# Start with default '.env' (which may be symlink), then '.env.dev' and '.env.prod'

envfiles = [ '.env', '.env.dev', '.env.prod']
for envfile in envfiles:
    envpath = os.path.join(BASE_DIR, envfile)
    if (os.path.isfile(envpath) or os.path.islink(envpath)):
        load_dotenv(dotenv_path=envpath)
        break

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DEBUG')

COOKIE_NAME = os.environ.get('COOKIE_NAME')

RECAPTCHA_SECRET_KEY = os.environ.get("RECAPTCHA_SECRET_KEY")

ALLOWED_HOSTS = os.environ.get("DJANGO_ALLOWED_HOSTS").split(" ")

REACT_APPLICATION_BASEURL = os.environ.get("REACT_APPLICATION_BASEURL")

# CORS_ALLOWED_ORIGINS = []
# for host in ALLOWED_HOSTS:
#     CORS_ALLOWED_ORIGINS.append('http://' + host)
#     CORS_ALLOWED_ORIGINS.append('https://' + host)

CORS_ALLOWED_ORIGIN_REGEXES = []

for host in ALLOWED_HOSTS:
    host_regex = host.replace(r'.', r'\.')
    CORS_ALLOWED_ORIGIN_REGEXES.append(r'^http?:\/\/([a-zA-Z0-9-]+\.)*' + host_regex + r'(:\d+)?$')
    CORS_ALLOWED_ORIGIN_REGEXES.append(r'^https?:\/\/([a-zA-Z0-9-]+\.)*' + host_regex + r'(:\d+)?$')

# CORS_ALLOWED_ORIGIN_REGEXES = [
#     r"^https?:\/\/([a-zA-Z0-9-]+\.)*example\.com(:\d+)?$",

#     r"^https:\/\/.*\.example\.com$",
#     r"^http:\/\/.*\.example\.com(:\d+)?$",  # for local dev with ports
# ]

CORS_ALLOW_CREDENTIALS = True

LEAFLET_CONFIG = {
    'DEFAULT_CENTER': (-0.0850, 50.8222),
    'DEFAULT_ZOOM': 16,
    'TILES': 'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'
}

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'engine',
    'leaflet',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'votewind.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates'), ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'votewind.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": os.environ.get("SQL_ENGINE", "django.db.backends.sqlite3"),
        "NAME": os.environ.get("SQL_DATABASE", os.path.join(BASE_DIR, "db.sqlite3")),
        "USER": os.environ.get("SQL_USER", "user"),
        "PASSWORD": os.environ.get("SQL_PASSWORD", "password"),
        "HOST": os.environ.get("SQL_HOST", "localhost"),
        "PORT": os.environ.get("SQL_PORT", "5432"),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'

EMAIL_HOST = os.environ.get("EMAIL_HOST")
EMAIL_PORT = os.environ.get("EMAIL_PORT")
EMAIL_HOST_USER = os.environ.get("EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = os.environ.get("EMAIL_HOST_PASSWORD")
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_USE_TLS = True
DEFAULT_FROM_EMAIL = os.environ.get("DEFAULT_FROM_EMAIL")
