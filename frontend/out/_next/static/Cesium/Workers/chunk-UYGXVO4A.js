import{a as e}from"./chunk-VRX6MZUH.js";import{a as t}from"./chunk-O2LOQWK4.js";import{b as n,c as a,d as r}from"./chunk-KLPRJ6SC.js";import{b as o,h as i}from"./chunk-4PT23TTH.js";import{a as s,b as c,c as u,d as l,e as d}from"./chunk-I4JBCTLR.js";import{a as h}from"./chunk-MCEXFPZL.js";import{a as m,b as f}from"./chunk-BOXFFUY5.js";import{e as w}from"./chunk-OVZZEY7C.js";function p(e,t){this.center=s.clone(e??s.ZERO),this.halfAxes=d.clone(t??d.ZERO)}p.packedLength=s.packedLength+d.packedLength,p.pack=function(e,t,n){return f.typeOf.object("value",e),f.defined("array",t),n=n??0,s.pack(e.center,t,n),d.pack(e.halfAxes,t,n+s.packedLength),t},p.unpack=function(e,t,n){return f.defined("array",e),t=t??0,w(n)||(n=new p),s.unpack(e,t,n.center),d.unpack(e,t+s.packedLength,n.halfAxes),n};var x=new s,b=new s,y=new s,g=new s,M=new s,O=new s,N=new d,T={unitary:new d,diagonal:new d};p.fromPoints=function(e,t){if(w(t)||(t=new p),!w(e)||0===e.length)return t.halfAxes=d.ZERO,t.center=s.ZERO,t;let n,a=e.length,r=s.clone(e[0],x);for(n=1;n<a;n++)s.add(r,e[n],r);let o=1/a;s.multiplyByScalar(r,o,r);let i=0,c=0,u=0,l=0,h=0,m=0,f;for(n=0;n<a;n++)i+=(f=s.subtract(e[n],r,b)).x*f.x,c+=f.x*f.y,u+=f.x*f.z,l+=f.y*f.y,h+=f.y*f.z,m+=f.z*f.z;i*=o,c*=o,u*=o,l*=o,h*=o,m*=o,N[0]=i,N[1]=c,N[2]=u,N[3]=c,N[4]=l,N[5]=h,N[6]=u,N[7]=h,N[8]=m;let C=d.computeEigenDecomposition(N,T),A=d.clone(C.unitary,t.halfAxes),P=d.getColumn(A,0,g),R=d.getColumn(A,1,M),I=d.getColumn(A,2,O),E=-Number.MAX_VALUE,L=-Number.MAX_VALUE,U=-Number.MAX_VALUE,S=Number.MAX_VALUE,q=Number.MAX_VALUE,z=Number.MAX_VALUE;for(n=0;n<a;n++)f=e[n],E=Math.max(s.dot(P,f),E),L=Math.max(s.dot(R,f),L),U=Math.max(s.dot(I,f),U),S=Math.min(s.dot(P,f),S),q=Math.min(s.dot(R,f),q),z=Math.min(s.dot(I,f),z);P=s.multiplyByScalar(P,.5*(S+E),P),R=s.multiplyByScalar(R,.5*(q+L),R),I=s.multiplyByScalar(I,.5*(z+U),I);let k=s.add(P,R,t.center);return s.add(k,I,k),y.x=E-S,y.y=L-q,y.z=U-z,s.multiplyByScalar(y,.5,y),d.multiplyByScale(t.halfAxes,y,t.halfAxes),t};var C=new s,A=new s;function P(e,t,n,a,r,o,i,c,u,l,h){if(!w(r)||!w(o)||!w(i)||!w(c)||!w(u)||!w(l))throw new m("all extents (minimum/maximum X/Y/Z) are required.");w(h)||(h=new p);let f=h.halfAxes;d.setColumn(f,0,t,f),d.setColumn(f,1,n,f),d.setColumn(f,2,a,f);let x=C;x.x=(r+o)/2,x.y=(i+c)/2,x.z=(u+l)/2,A.x=(o-r)/2,A.y=(c-i)/2,A.z=(l-u)/2;let b=h.center;return x=d.multiplyByVector(f,x,x),s.add(e,x,b),d.multiplyByScale(f,A,f),h}var R=new c,I=new s,E=new c,L=new c,U=new c,S=new c,q=new c,z=new s,k=new s,_=new s,j=new s,B=new s,v=new u,X=new u,V=new u,W=new u,Z=new u,D=new s,Y=new s,F=new s,G=new s,H=new u,J=new s,K=new s,Q=new s,$=new t(s.UNIT_X,0);p.fromRectangle=function(n,a,r,o,u){let d,f,p,x,b,y,g;if(!w(n))throw new m("rectangle is required");if(n.width<0||n.width>h.TWO_PI)throw new m("Rectangle width must be between 0 and 2 * pi");if(n.height<0||n.height>h.PI)throw new m("Rectangle height must be between 0 and pi");if(w(o)&&!h.equalsEpsilon(o.radii.x,o.radii.y,h.EPSILON15))throw new m("Ellipsoid must be an ellipsoid of revolution (radii.x == radii.y)");if(a=a??0,r=r??0,o=o??l.default,n.width<=h.PI){let s=i.center(n,R),l=new e(o.cartographicToCartesian(s,I),o);g=l.plane;let h=s.longitude,m=n.south<0&&n.north>0?0:s.latitude,w=c.fromRadians(h,n.north,r,E),M=c.fromRadians(n.west,n.north,r,L),O=c.fromRadians(n.west,m,r,U),N=c.fromRadians(n.west,n.south,r,S),T=c.fromRadians(h,n.south,r,q),C=o.cartographicToCartesian(w,z),A=o.cartographicToCartesian(M,k),D=o.cartographicToCartesian(O,_),Y=o.cartographicToCartesian(N,j),F=o.cartographicToCartesian(T,B),G=l.projectPointToNearestOnPlane(C,v),H=l.projectPointToNearestOnPlane(A,X),J=l.projectPointToNearestOnPlane(D,V),K=l.projectPointToNearestOnPlane(Y,W),Q=l.projectPointToNearestOnPlane(F,Z);return f=-(d=Math.min(H.x,J.x,K.x)),x=Math.max(H.y,G.y),p=Math.min(K.y,Q.y),M.height=N.height=a,A=o.cartographicToCartesian(M,k),Y=o.cartographicToCartesian(N,j),b=Math.min(t.getPointDistance(g,A),t.getPointDistance(g,Y)),y=r,P(l.origin,l.xAxis,l.yAxis,l.zAxis,d,f,p,x,b,y,u)}let M=n.south>0,O=n.north<0,N=M?n.south:O?n.north:0,T=i.center(n,R).longitude,C=s.fromRadians(T,N,r,o,D);C.z=0;let A=Math.abs(C.x)<h.EPSILON10&&Math.abs(C.y)<h.EPSILON10?s.UNIT_X:s.normalize(C,Y),ee=s.UNIT_Z,et=s.cross(A,ee,F);g=t.fromPointNormal(C,A,$);let en=s.fromRadians(T+h.PI_OVER_TWO,N,r,o,G);d=-(f=s.dot(t.projectPointOntoPlane(g,en,H),et)),x=s.fromRadians(0,n.north,O?a:r,o,J).z,p=s.fromRadians(0,n.south,M?a:r,o,K).z;let ea=s.fromRadians(n.east,N,r,o,Q);return P(C,et,ee,A,d,f,p,x,b=t.getPointDistance(g,ea),y=0,u)},p.fromTransformation=function(e,t){return f.typeOf.object("transformation",e),w(t)||(t=new p),t.center=o.getTranslation(e,t.center),t.halfAxes=o.getMatrix3(e,t.halfAxes),t.halfAxes=d.multiplyByScalar(t.halfAxes,.5,t.halfAxes),t},p.clone=function(e,t){if(w(e))return w(t)?(s.clone(e.center,t.center),d.clone(e.halfAxes,t.halfAxes),t):new p(e.center,e.halfAxes)},p.intersectPlane=function(e,t){if(!w(e))throw new m("box is required.");if(!w(t))throw new m("plane is required.");let a=e.center,r=t.normal,o=e.halfAxes,i=r.x,c=r.y,u=r.z,l=Math.abs(i*o[d.COLUMN0ROW0]+c*o[d.COLUMN0ROW1]+u*o[d.COLUMN0ROW2])+Math.abs(i*o[d.COLUMN1ROW0]+c*o[d.COLUMN1ROW1]+u*o[d.COLUMN1ROW2])+Math.abs(i*o[d.COLUMN2ROW0]+c*o[d.COLUMN2ROW1]+u*o[d.COLUMN2ROW2]),h=s.dot(r,a)+t.distance;return h<=-l?n.OUTSIDE:h>=l?n.INSIDE:n.INTERSECTING};var ee=new s,et=new s,en=new s,ea=new s,er=new s,eo=new s;p.distanceSquaredTo=function(e,t){if(!w(e))throw new m("box is required.");if(!w(t))throw new m("cartesian is required.");let n=s.subtract(t,e.center,C),a=e.halfAxes,r=d.getColumn(a,0,ee),o=d.getColumn(a,1,et),i=d.getColumn(a,2,en),c=s.magnitude(r),u=s.magnitude(o),l=s.magnitude(i),f=!0,p=!0,x=!0;c>0?s.divideByScalar(r,c,r):f=!1,u>0?s.divideByScalar(o,u,o):p=!1,l>0?s.divideByScalar(i,l,i):x=!1;let b=!f+!p+!x,y,g,M;if(1===b){let e=r;y=o,g=i,p?x||(e=i,g=r):(e=o,y=r),M=s.cross(y,g,er),e===r?r=M:e===o?o=M:e===i&&(i=M)}else if(2===b){y=r,p?y=o:x&&(y=i);let e=s.UNIT_Y;e.equalsEpsilon(y,h.EPSILON3)&&(e=s.UNIT_X),g=s.cross(y,e,ea),s.normalize(g,g),M=s.cross(y,g,er),s.normalize(M,M),y===r?(o=g,i=M):y===o?(i=g,r=M):y===i&&(r=g,o=M)}else 3===b&&(r=s.UNIT_X,o=s.UNIT_Y,i=s.UNIT_Z);eo.x=s.dot(n,r),eo.y=s.dot(n,o),eo.z=s.dot(n,i);let O=0,N;return eo.x<-c?O+=(N=eo.x+c)*N:eo.x>c&&(O+=(N=eo.x-c)*N),eo.y<-u?O+=(N=eo.y+u)*N:eo.y>u&&(O+=(N=eo.y-u)*N),eo.z<-l?O+=(N=eo.z+l)*N:eo.z>l&&(O+=(N=eo.z-l)*N),O};var ei=new s,es=new s;p.computePlaneDistances=function(e,t,n,r){if(!w(e))throw new m("box is required.");if(!w(t))throw new m("position is required.");if(!w(n))throw new m("direction is required.");w(r)||(r=new a);let o=Number.POSITIVE_INFINITY,i=Number.NEGATIVE_INFINITY,c=e.center,u=e.halfAxes,l=d.getColumn(u,0,ee),h=d.getColumn(u,1,et),f=d.getColumn(u,2,en),p=s.add(l,h,ei);s.add(p,f,p),s.add(p,c,p);let x=s.subtract(p,t,es),b=s.dot(n,x);return o=Math.min(b,o),i=Math.max(b,i),s.add(c,l,p),s.add(p,h,p),s.subtract(p,f,p),s.subtract(p,t,x),o=Math.min(b=s.dot(n,x),o),i=Math.max(b,i),s.add(c,l,p),s.subtract(p,h,p),s.add(p,f,p),s.subtract(p,t,x),o=Math.min(b=s.dot(n,x),o),i=Math.max(b,i),s.add(c,l,p),s.subtract(p,h,p),s.subtract(p,f,p),s.subtract(p,t,x),o=Math.min(b=s.dot(n,x),o),i=Math.max(b,i),s.subtract(c,l,p),s.add(p,h,p),s.add(p,f,p),s.subtract(p,t,x),o=Math.min(b=s.dot(n,x),o),i=Math.max(b,i),s.subtract(c,l,p),s.add(p,h,p),s.subtract(p,f,p),s.subtract(p,t,x),o=Math.min(b=s.dot(n,x),o),i=Math.max(b,i),s.subtract(c,l,p),s.subtract(p,h,p),s.add(p,f,p),s.subtract(p,t,x),o=Math.min(b=s.dot(n,x),o),i=Math.max(b,i),s.subtract(c,l,p),s.subtract(p,h,p),s.subtract(p,f,p),s.subtract(p,t,x),o=Math.min(b=s.dot(n,x),o),i=Math.max(b,i),r.start=o,r.stop=i,r};var ec=new s,eu=new s,el=new s;p.computeCorners=function(e,t){f.typeOf.object("box",e),w(t)||(t=[new s,new s,new s,new s,new s,new s,new s,new s]);let n=e.center,a=e.halfAxes,r=d.getColumn(a,0,ec),o=d.getColumn(a,1,eu),i=d.getColumn(a,2,el);return s.clone(n,t[0]),s.subtract(t[0],r,t[0]),s.subtract(t[0],o,t[0]),s.subtract(t[0],i,t[0]),s.clone(n,t[1]),s.subtract(t[1],r,t[1]),s.subtract(t[1],o,t[1]),s.add(t[1],i,t[1]),s.clone(n,t[2]),s.subtract(t[2],r,t[2]),s.add(t[2],o,t[2]),s.subtract(t[2],i,t[2]),s.clone(n,t[3]),s.subtract(t[3],r,t[3]),s.add(t[3],o,t[3]),s.add(t[3],i,t[3]),s.clone(n,t[4]),s.add(t[4],r,t[4]),s.subtract(t[4],o,t[4]),s.subtract(t[4],i,t[4]),s.clone(n,t[5]),s.add(t[5],r,t[5]),s.subtract(t[5],o,t[5]),s.add(t[5],i,t[5]),s.clone(n,t[6]),s.add(t[6],r,t[6]),s.add(t[6],o,t[6]),s.subtract(t[6],i,t[6]),s.clone(n,t[7]),s.add(t[7],r,t[7]),s.add(t[7],o,t[7]),s.add(t[7],i,t[7]),t};var ed=new d;p.computeTransformation=function(e,t){f.typeOf.object("box",e),w(t)||(t=new o);let n=e.center,a=d.multiplyByUniformScale(e.halfAxes,2,ed);return o.fromRotationTranslation(a,n,t)};var eh=new r;p.isOccluded=function(e,t){if(!w(e))throw new m("box is required.");if(!w(t))throw new m("occluder is required.");let n=r.fromOrientedBoundingBox(e,eh);return!t.isBoundingSphereVisible(n)},p.prototype.intersectPlane=function(e){return p.intersectPlane(this,e)},p.prototype.distanceSquaredTo=function(e){return p.distanceSquaredTo(this,e)},p.prototype.computePlaneDistances=function(e,t,n){return p.computePlaneDistances(this,e,t,n)},p.prototype.computeCorners=function(e){return p.computeCorners(this,e)},p.prototype.computeTransformation=function(e){return p.computeTransformation(this,e)},p.prototype.isOccluded=function(e){return p.isOccluded(this,e)},p.equals=function(e,t){return e===t||w(e)&&w(t)&&s.equals(e.center,t.center)&&d.equals(e.halfAxes,t.halfAxes)},p.prototype.clone=function(e){return p.clone(this,e)},p.prototype.equals=function(e){return p.equals(this,e)};var em=p;export{em as a};