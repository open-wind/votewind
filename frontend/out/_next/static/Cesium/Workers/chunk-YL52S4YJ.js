import{a as e,c as a}from"./chunk-YUGVMPE3.js";import{a as t}from"./chunk-XTBKSAXL.js";import{f as r}from"./chunk-4PT23TTH.js";import{a as n,e as l}from"./chunk-I4JBCTLR.js";import{a as o}from"./chunk-MCEXFPZL.js";import{e as i}from"./chunk-OVZZEY7C.js";var s={},u=new n,c=new n,y=new n,m=new n,d=[new n,new n],p=new n,g=new n,h=new n,f=new n,z=new n,w=new n,x=new n,B=new n,E=new n,A=new n,S=new r,D=new l;function P(a,t,i,s,y){let m,d=n.angleBetween(n.subtract(t,a,u),n.subtract(i,a,c)),p=s===e.BEVELED?1:Math.ceil(d/o.toRadians(5))+1,g=3*p,h=Array(g);h[g-3]=i.x,h[g-2]=i.y,h[g-1]=i.z,m=y?l.fromQuaternion(r.fromAxisAngle(n.negate(a,u),d/p,S),D):l.fromQuaternion(r.fromAxisAngle(a,d/p,S),D);let f=0;t=n.clone(t,u);for(let e=0;e<p;e++)t=l.multiplyByVector(m,t,t),h[f++]=t.x,h[f++]=t.y,h[f++]=t.z;return h}function b(e,a,t,r){let l=u;return r||(a=n.negate(a,a)),[(l=n.add(e,a,l)).x,l.y,l.z,t.x,t.y,t.z]}function N(e,a,t,r){let l=Array(e.length),o=Array(e.length),i=n.multiplyByScalar(a,t,u),s=n.negate(i,c),d=0,p=e.length-1;for(let a=0;a<e.length;a+=3){let t=n.fromArray(e,a,y),r=n.add(t,s,m);l[d++]=r.x,l[d++]=r.y,l[d++]=r.z;let u=n.add(t,i,m);o[p--]=u.z,o[p--]=u.y,o[p--]=u.x}return r.push(l,o),r}s.addAttribute=function(e,a,t,r){let n=a.x,l=a.y,o=a.z;i(t)&&(e[t]=n,e[t+1]=l,e[t+2]=o),i(r)&&(e[r]=o,e[r-1]=l,e[r-2]=n)};var v=new n,L=new n;s.computePositions=function(r){var l;let i,s,c,y,m,S,D,O,R=r.granularity,T=r.positions,j=r.ellipsoid,k=r.width/2,U=r.cornerType,V=r.saveAttributes,M=p,C=g,I=h,X=f,Z=z,G=w,Q=x,Y=B,q=E,F=A,H=[],J=V?[]:void 0,K=V?[]:void 0,W=T[0],$=T[1];C=n.normalize(n.subtract($,W,C),C),M=j.geodeticSurfaceNormal(W,M),X=n.normalize(n.cross(M,C,X),X),V&&(J.push(X.x,X.y,X.z),K.push(M.x,M.y,M.z)),Q=n.clone(W,Q),W=$,I=n.negate(C,I);let _=[],ee,ea=T.length;for(ee=1;ee<ea-1;ee++){M=j.geodeticSurfaceNormal(W,M),$=T[ee+1],C=n.normalize(n.subtract($,W,C),C);let r=n.multiplyByScalar(M,n.dot(C,M),v);n.subtract(C,r,r),n.normalize(r,r);let l=n.multiplyByScalar(M,n.dot(I,M),L);if(n.subtract(I,l,l),n.normalize(l,l),!o.equalsEpsilon(Math.abs(n.dot(r,l)),1,o.EPSILON7)){Z=n.normalize(n.add(C,I,Z),Z),Z=n.cross(Z,M,Z),Z=n.cross(M,Z,Z),Z=n.normalize(Z,Z);let r=k/Math.max(.25,n.magnitude(n.cross(Z,I,u))),l=a.angleIsGreaterThanPi(C,I,W,j);Z=n.multiplyByScalar(Z,r,Z),l?(Y=n.add(W,Z,Y),F=n.add(Y,n.multiplyByScalar(X,k,F),F),q=n.add(Y,n.multiplyByScalar(X,2*k,q),q),d[0]=n.clone(Q,d[0]),d[1]=n.clone(F,d[1]),H=N(t.generateArc({positions:d,granularity:R,ellipsoid:j}),X,k,H),V&&(J.push(X.x,X.y,X.z),K.push(M.x,M.y,M.z)),G=n.clone(q,G),X=n.normalize(n.cross(M,C,X),X),q=n.add(Y,n.multiplyByScalar(X,2*k,q),q),Q=n.add(Y,n.multiplyByScalar(X,k,Q),Q),U===e.ROUNDED||U===e.BEVELED?_.push({leftPositions:P(Y,G,q,U,l)}):_.push({leftPositions:b(W,n.negate(Z,Z),q,l)})):(q=n.add(W,Z,q),F=n.add(q,n.negate(n.multiplyByScalar(X,k,F),F),F),Y=n.add(q,n.negate(n.multiplyByScalar(X,2*k,Y),Y),Y),d[0]=n.clone(Q,d[0]),d[1]=n.clone(F,d[1]),H=N(t.generateArc({positions:d,granularity:R,ellipsoid:j}),X,k,H),V&&(J.push(X.x,X.y,X.z),K.push(M.x,M.y,M.z)),G=n.clone(Y,G),X=n.normalize(n.cross(M,C,X),X),Y=n.add(q,n.negate(n.multiplyByScalar(X,2*k,Y),Y),Y),Q=n.add(q,n.negate(n.multiplyByScalar(X,k,Q),Q),Q),U===e.ROUNDED||U===e.BEVELED?_.push({rightPositions:P(q,G,Y,U,l)}):_.push({rightPositions:b(W,Z,Y,l)})),I=n.negate(C,I)}W=$}return M=j.geodeticSurfaceNormal(W,M),d[0]=n.clone(Q,d[0]),d[1]=n.clone(W,d[1]),H=N(t.generateArc({positions:d,granularity:R,ellipsoid:j}),X,k,H),V&&(J.push(X.x,X.y,X.z),K.push(M.x,M.y,M.z)),U===e.ROUNDED&&(l=H,i=p,s=g,c=h,y=l[1],s=n.fromArray(l[1],y.length-3,s),c=n.fromArray(l[0],0,c),m=P(i=n.midpoint(s,c,i),s,c,e.ROUNDED,!1),S=l.length-1,D=l[S-1],y=l[S],s=n.fromArray(D,D.length-3,s),c=n.fromArray(y,0,c),O=[m,P(i=n.midpoint(s,c,i),s,c,e.ROUNDED,!1)]),{positions:H,corners:_,lefts:J,normals:K,endPositions:O}};var O=s;export{O as a};