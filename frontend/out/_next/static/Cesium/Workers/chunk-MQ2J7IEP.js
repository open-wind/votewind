import{a as t,b as i,d as e}from"./chunk-I4JBCTLR.js";import{a as n}from"./chunk-MCEXFPZL.js";import{a as a,b as s}from"./chunk-BOXFFUY5.js";import{e as h}from"./chunk-OVZZEY7C.js";function l(t,i,e){if(0===t)return i*e;let n=t*t,a=n*n,s=a*n,h=s*n,l=h*n,d=l*n,u=Math.sin(2*e),o=Math.sin(4*e),r=Math.sin(6*e),c=Math.sin(8*e),_=Math.sin(10*e),g=Math.sin(12*e);return i*((1-n/4-3*a/64-5*s/256-175*h/16384-441*l/65536-4851*d/1048576)*e-(3*n/8+3*a/32+45*s/1024+105*h/4096+2205*l/131072+6237*d/524288)*u+(15*a/256+45*s/1024+525*h/16384+1575*l/65536+155925*d/8388608)*o-(35*s/3072+175*h/12288+3675*l/262144+13475*d/1048576)*r+(315*h/131072+2205*l/524288+43659*d/8388608)*c-(693*l/1310720+6237*d/5242880)*_+1001*d/8388608*g)}function d(t,i){if(0===t)return Math.log(Math.tan(.5*(n.PI_OVER_TWO+i)));let e=t*Math.sin(i);return Math.log(Math.tan(.5*(n.PI_OVER_TWO+i)))-t/2*Math.log((1+e)/(1-e))}var u=new t,o=new t;function r(e,a,h,r){var c,_,g,M;let f,p,P=t.normalize(r.cartographicToCartesian(a,o),u),m=t.normalize(r.cartographicToCartesian(h,o),o);s.typeOf.number.greaterThanOrEquals("value",Math.abs(Math.abs(t.angleBetween(P,m))-Math.PI),.0125);let O=r.maximumRadius,E=r.minimumRadius,I=O*O;e._ellipticitySquared=(I-E*E)/I,e._ellipticity=Math.sqrt(e._ellipticitySquared),e._start=i.clone(a,e._start),e._start.height=0,e._end=i.clone(h,e._end),e._end.height=0,e._heading=(c=a.longitude,_=a.latitude,g=h.longitude,M=h.latitude,f=d(e._ellipticity,_),p=d(e._ellipticity,M),Math.atan2(n.negativePiToPi(g-c),p-f)),e._distance=function(t,i,e,a,s,h,d){let u=t._heading,o=h-a,r=0;if(n.equalsEpsilon(Math.abs(u),n.PI_OVER_TWO,n.EPSILON8)){if(i===e)r=i*Math.cos(s)*n.negativePiToPi(o);else{let e=Math.sin(s);r=i*Math.cos(s)*n.negativePiToPi(o)/Math.sqrt(1-t._ellipticitySquared*e*e)}}else{let e=l(t._ellipticity,i,s);r=(l(t._ellipticity,i,d)-e)/Math.cos(u)}return Math.abs(r)}(e,r.maximumRadius,r.minimumRadius,a.longitude,a.latitude,h.longitude,h.latitude)}function c(t,e,a,s,u,o){if(0===a)return i.clone(t,o);let r=u*u,c,_,g;if(Math.abs(n.PI_OVER_TWO-Math.abs(e))>n.EPSILON8){if(_=function(t,i,e){let n=t/e;if(0===i)return n;let a=n*n,s=a*n,h=s*n,l=i*i,d=l*l,u=d*l,o=u*l,r=o*l,c=r*l,_=Math.sin(2*n),g=Math.cos(2*n),M=Math.sin(4*n),f=Math.cos(4*n),p=Math.sin(6*n),P=Math.cos(6*n),m=Math.sin(8*n),O=Math.cos(8*n),E=Math.sin(10*n),I=Math.cos(10*n),T=Math.sin(12*n);return n+n*l/4+7*n*d/64+15*n*u/256+579*n*o/16384+1515*n*r/65536+16837*n*c/1048576+(3*n*d/16+45*n*u/256-n*(32*a-561)*o/4096-n*(232*a-1677)*r/16384+n*(399985-90560*a+512*h)*c/5242880)*g+(21*n*u/256+483*n*o/4096-n*(224*a-1969)*r/16384-n*(33152*a-112599)*c/1048576)*f+(151*n*o/4096+4681*n*r/65536+1479*n*c/16384-453*s*c/32768)*P+(1097*n*r/65536+42783*n*c/1048576)*O+8011*n*c/1048576*I+(3*l/8+3*d/16+213*u/2048-3*a*u/64+255*o/4096-33*a*o/512+20861*r/524288-33*a*r/512+h*r/1024+28273*c/1048576-471*a*c/8192+9*h*c/4096)*_+(21*d/256+21*u/256+533*o/8192-21*a*o/512+197*r/4096-315*a*r/4096+584039*c/0x1000000-12517*a*c/131072+7*h*c/2048)*M+(151*u/6144+151*o/4096+5019*r/131072-453*a*r/16384+26965*c/786432-8607*a*c/131072)*p+(1097*o/131072+1097*r/65536+225797*c/0xa00000-1097*a*c/65536)*m+(8011*r/2621440+8011*c/1048576)*E+293393*c/0xf000000*T}(l(u,s,t.latitude)+a*Math.cos(e),u,s),Math.abs(e)<n.EPSILON10)c=n.negativePiToPi(t.longitude);else{let i=d(u,t.latitude);g=Math.tan(e)*(d(u,_)-i),c=n.negativePiToPi(t.longitude+g)}}else{let i;if(_=t.latitude,0===u)i=s*Math.cos(t.latitude);else{let e=Math.sin(t.latitude);i=s*Math.cos(t.latitude)/Math.sqrt(1-r*e*e)}g=a/i,c=e>0?n.negativePiToPi(t.longitude+g):n.negativePiToPi(t.longitude-g)}return h(o)?(o.longitude=c,o.latitude=_,o.height=0,o):new i(c,_,0)}function _(t,n,a){let s=a??e.default;this._ellipsoid=s,this._start=new i,this._end=new i,this._heading=void 0,this._distance=void 0,this._ellipticity=void 0,this._ellipticitySquared=void 0,h(t)&&h(n)&&r(this,t,n,s)}Object.defineProperties(_.prototype,{ellipsoid:{get:function(){return this._ellipsoid}},surfaceDistance:{get:function(){return s.defined("distance",this._distance),this._distance}},start:{get:function(){return this._start}},end:{get:function(){return this._end}},heading:{get:function(){return s.defined("distance",this._distance),this._heading}}}),_.fromStartHeadingDistance=function(t,i,a,l,d){s.defined("start",t),s.defined("heading",i),s.defined("distance",a),s.typeOf.number.greaterThan("distance",a,0);let u=l??e.default,o=u.maximumRadius,r=u.minimumRadius,g=o*o,M=Math.sqrt((g-r*r)/g),f=c(t,i=n.negativePiToPi(i),a,u.maximumRadius,M);return!h(d)||h(l)&&!l.equals(d.ellipsoid)?new _(t,f,u):(d.setEndPoints(t,f),d)},_.prototype.setEndPoints=function(t,i){s.defined("start",t),s.defined("end",i),r(this,t,i,this._ellipsoid)},_.prototype.interpolateUsingFraction=function(t,i){return this.interpolateUsingSurfaceDistance(t*this._distance,i)},_.prototype.interpolateUsingSurfaceDistance=function(t,i){if(s.typeOf.number("distance",t),!h(this._distance)||0===this._distance)throw new a("EllipsoidRhumbLine must have distinct start and end set.");return c(this._start,this._heading,t,this._ellipsoid.maximumRadius,this._ellipticity,i)},_.prototype.findIntersectionWithLongitude=function(t,e){if(s.typeOf.number("intersectionLongitude",t),!h(this._distance)||0===this._distance)throw new a("EllipsoidRhumbLine must have distinct start and end set.");let l=this._ellipticity,d=this._heading,u=Math.abs(d),o=this._start;if(t=n.negativePiToPi(t),n.equalsEpsilon(Math.abs(t),Math.PI,n.EPSILON14)&&(t=n.sign(o.longitude)*Math.PI),h(e)||(e=new i),Math.abs(n.PI_OVER_TWO-u)<=n.EPSILON8)return e.longitude=t,e.latitude=o.latitude,e.height=0,e;if(n.equalsEpsilon(Math.abs(n.PI_OVER_TWO-u),n.PI_OVER_TWO,n.EPSILON8))return n.equalsEpsilon(t,o.longitude,n.EPSILON12)?void 0:(e.longitude=t,e.latitude=n.PI_OVER_TWO*n.sign(n.PI_OVER_TWO-d),e.height=0,e);let r=o.latitude,c=l*Math.sin(r),_=Math.tan(.5*(n.PI_OVER_TWO+r))*Math.exp((t-o.longitude)/Math.tan(d)),g=(1+c)/(1-c),M=o.latitude,f;do{let t=l*Math.sin(f=M);M=2*Math.atan(_*Math.pow((1+t)/(1-t)/g,l/2))-n.PI_OVER_TWO}while(!n.equalsEpsilon(M,f,n.EPSILON12));return e.longitude=t,e.latitude=M,e.height=0,e},_.prototype.findIntersectionWithLatitude=function(t,e){if(s.typeOf.number("intersectionLatitude",t),!h(this._distance)||0===this._distance)throw new a("EllipsoidRhumbLine must have distinct start and end set.");let l=this._ellipticity,u=this._heading,o=this._start;if(n.equalsEpsilon(Math.abs(u),n.PI_OVER_TWO,n.EPSILON8))return;let r=d(l,o.latitude),c=Math.tan(u)*(d(l,t)-r),_=n.negativePiToPi(o.longitude+c);return h(e)?(e.longitude=_,e.latitude=t,e.height=0,e):new i(_,t,0)};var g=_;export{g as a};