import{a as t,b as e,d as i}from"./chunk-I4JBCTLR.js";import{a as o}from"./chunk-MCEXFPZL.js";import{a as a}from"./chunk-BOXFFUY5.js";import{e as r}from"./chunk-OVZZEY7C.js";function n(t){this._ellipsoid=t??i.WGS84,this._semimajorAxis=this._ellipsoid.maximumRadius,this._oneOverSemimajorAxis=1/this._semimajorAxis}Object.defineProperties(n.prototype,{ellipsoid:{get:function(){return this._ellipsoid}}}),n.mercatorAngleToGeodeticLatitude=function(t){return o.PI_OVER_TWO-2*Math.atan(Math.exp(-t))},n.geodeticLatitudeToMercatorAngle=function(t){t>n.MaximumLatitude?t=n.MaximumLatitude:t<-n.MaximumLatitude&&(t=-n.MaximumLatitude);let e=Math.sin(t);return .5*Math.log((1+e)/(1-e))},n.MaximumLatitude=n.mercatorAngleToGeodeticLatitude(Math.PI),n.prototype.project=function(e,i){let o=this._semimajorAxis,a=e.longitude*o,u=n.geodeticLatitudeToMercatorAngle(e.latitude)*o,s=e.height;return r(i)?(i.x=a,i.y=u,i.z=s,i):new t(a,u,s)},n.prototype.unproject=function(t,i){if(!r(t))throw new a("cartesian is required");let o=this._oneOverSemimajorAxis,u=t.x*o,s=n.mercatorAngleToGeodeticLatitude(t.y*o),m=t.z;return r(i)?(i.longitude=u,i.latitude=s,i.height=m,i):new e(u,s,m)};var u=n;export{u as a};