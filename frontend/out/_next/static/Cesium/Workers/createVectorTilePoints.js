import{a as r}from"./chunk-3WQQGQIW.js";import{a as a}from"./chunk-OFGHX2F3.js";import{h as n}from"./chunk-4PT23TTH.js";import"./chunk-J4RA3VLE.js";import{a as t,b as e,d as o}from"./chunk-I4JBCTLR.js";import{a as s}from"./chunk-MCEXFPZL.js";import"./chunk-5IUKPU5Q.js";import"./chunk-B3NSNNUV.js";import"./chunk-BOXFFUY5.js";import"./chunk-OVZZEY7C.js";var i=new e,p=new t,u=new n,m=new o,c={min:void 0,max:void 0},h=r(function(r,h){var f;let k,l=new Uint16Array(r.positions);f=new Float64Array(f=r.packedBuffer),k=0,c.min=f[k++],c.max=f[k++],n.unpack(f,k,u),k+=n.packedLength,o.unpack(f,k,m);let j=c.min,d=c.max,w=l.length/3,F=l.subarray(0,w),b=l.subarray(w,2*w),g=l.subarray(2*w,3*w);a.zigZagDeltaDecode(F,b,g);let y=new Float64Array(l.length);for(let r=0;r<w;++r){let a=F[r],n=b[r],o=g[r],c=s.lerp(u.west,u.east,a/32767),h=s.lerp(u.south,u.north,n/32767),f=s.lerp(j,d,o/32767),k=e.fromRadians(c,h,f,i),l=m.cartographicToCartesian(k,p);t.pack(l,y,3*r)}return h.push(y.buffer),{positions:y.buffer}});export{h as default};