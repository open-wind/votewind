import{a as i}from"./chunk-4N75Z7F2.js";import"./chunk-XTBKSAXL.js";import"./chunk-F27AWPUY.js";import"./chunk-VKBMYYL4.js";import"./chunk-MQ2J7IEP.js";import"./chunk-LHHREGTA.js";import"./chunk-O2LOQWK4.js";import{a as t}from"./chunk-I4PVU2XE.js";import{a as e}from"./chunk-TMRGWDA2.js";import{b as o,c as n,d as r}from"./chunk-OST65WKL.js";import{d as s}from"./chunk-KLPRJ6SC.js";import"./chunk-4PT23TTH.js";import{a as m}from"./chunk-J4RA3VLE.js";import{a as a,d as h,f as u}from"./chunk-I4JBCTLR.js";import{a as l}from"./chunk-MCEXFPZL.js";import"./chunk-5IUKPU5Q.js";import"./chunk-B3NSNNUV.js";import{a as p}from"./chunk-BOXFFUY5.js";import{e as c}from"./chunk-OVZZEY7C.js";var g=new a,f=new a;function d(i){let t=(i=i??u.EMPTY_OBJECT).positions,e=i.maximumHeights,o=i.minimumHeights;if(!c(t))throw new p("options.positions is required.");if(c(e)&&e.length!==t.length)throw new p("options.positions and options.maximumHeights must have the same length.");if(c(o)&&o.length!==t.length)throw new p("options.positions and options.minimumHeights must have the same length.");let n=i.granularity??l.RADIANS_PER_DEGREE,r=i.ellipsoid??h.default;this._positions=t,this._minimumHeights=o,this._maximumHeights=e,this._granularity=n,this._ellipsoid=h.clone(r),this._workerName="createWallOutlineGeometry";let s=1+t.length*a.packedLength+2;c(o)&&(s+=o.length),c(e)&&(s+=e.length),this.packedLength=s+h.packedLength+1}d.pack=function(i,t,e){if(!c(i))throw new p("value is required");if(!c(t))throw new p("array is required");e=e??0;let o,n=i._positions,r=n.length;for(t[e++]=r,o=0;o<r;++o,e+=a.packedLength)a.pack(n[o],t,e);let s=i._minimumHeights;if(r=c(s)?s.length:0,t[e++]=r,c(s))for(o=0;o<r;++o)t[e++]=s[o];let m=i._maximumHeights;if(r=c(m)?m.length:0,t[e++]=r,c(m))for(o=0;o<r;++o)t[e++]=m[o];return h.pack(i._ellipsoid,t,e),t[e+=h.packedLength]=i._granularity,t};var k=h.clone(h.UNIT_SPHERE),_={positions:void 0,minimumHeights:void 0,maximumHeights:void 0,ellipsoid:k,granularity:void 0};d.unpack=function(i,t,e){let o,n;if(!c(i))throw new p("array is required");t=t??0;let r,s=i[t++],m=Array(s);for(r=0;r<s;++r,t+=a.packedLength)m[r]=a.unpack(i,t);if((s=i[t++])>0)for(o=Array(s),r=0;r<s;++r)o[r]=i[t++];if((s=i[t++])>0)for(n=Array(s),r=0;r<s;++r)n[r]=i[t++];let u=h.unpack(i,t,k),l=i[t+=h.packedLength];return c(e)?(e._positions=m,e._minimumHeights=o,e._maximumHeights=n,e._ellipsoid=h.clone(u,e._ellipsoid),e._granularity=l,e):(_.positions=m,_.minimumHeights=o,_.maximumHeights=n,_.granularity=l,new d(_))},d.fromConstantHeights=function(i){let t=(i=i??u.EMPTY_OBJECT).positions;if(!c(t))throw new p("options.positions is required.");let e,o,n=i.minimumHeight,r=i.maximumHeight,s=c(n),m=c(r);if(s||m){let i=t.length;e=s?Array(i):void 0,o=m?Array(i):void 0;for(let t=0;t<i;++t)s&&(e[t]=n),m&&(o[t]=r)}return new d({positions:t,maximumHeights:o,minimumHeights:e,ellipsoid:i.ellipsoid})},d.createGeometry=function(h){let u,p=h._positions,d=h._minimumHeights,k=h._maximumHeights,_=h._granularity,y=h._ellipsoid,H=i.computePositions(y,p,k,d,_,!1);if(!c(H))return;let w=H.bottomPositions,E=H.topPositions,j=E.length,A=2*j,L=new Float64Array(A),P=0;for(j/=3,u=0;u<j;++u){let i=3*u,t=a.fromArray(E,i,g),e=a.fromArray(w,i,f);L[P++]=e.x,L[P++]=e.y,L[P++]=e.z,L[P++]=t.x,L[P++]=t.y,L[P++]=t.z}let T=new e({position:new r({componentDatatype:m.DOUBLE,componentsPerAttribute:3,values:L})}),v=A/3;A=2*v-4+v;let x=t.createTypedArray(v,A),O=0;for(u=0;u<v-2;u+=2){let i=u,t=u+2,e=a.fromArray(L,3*i,g),o=a.fromArray(L,3*t,f);if(a.equalsEpsilon(e,o,l.EPSILON10))continue;let n=u+1,r=u+3;x[O++]=n,x[O++]=i,x[O++]=n,x[O++]=r,x[O++]=i,x[O++]=t}return x[O++]=v-2,x[O++]=v-1,new n({attributes:T,indices:x,primitiveType:o.LINES,boundingSphere:new s.fromVertices(L)})};var y=function(i,t){return c(t)&&(i=d.unpack(i,t)),i._ellipsoid=h.clone(i._ellipsoid),d.createGeometry(i)};export{y as default};