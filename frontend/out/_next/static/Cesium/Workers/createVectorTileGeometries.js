import{a as e}from"./chunk-HJ6M6NKU.js";import{a as t}from"./chunk-ONRS4YAP.js";import"./chunk-GVXEIANZ.js";import{a as n}from"./chunk-G6ISHM24.js";import{a as r}from"./chunk-3WQQGQIW.js";import{a as o}from"./chunk-YNIJIEED.js";import"./chunk-HNJRTQHB.js";import"./chunk-PJSC3CZC.js";import{a as i}from"./chunk-I4PVU2XE.js";import"./chunk-TMRGWDA2.js";import"./chunk-OST65WKL.js";import{d as s}from"./chunk-KLPRJ6SC.js";import{b as a}from"./chunk-4PT23TTH.js";import"./chunk-J4RA3VLE.js";import{a as c}from"./chunk-I4JBCTLR.js";import"./chunk-MCEXFPZL.js";import"./chunk-5IUKPU5Q.js";import"./chunk-B3NSNNUV.js";import"./chunk-BOXFFUY5.js";import{e as l}from"./chunk-OVZZEY7C.js";var u=function(e){this.offset=e.offset,this.count=e.count,this.color=e.color,this.batchIds=e.batchIds},d=new c,f=a.packedLength+c.packedLength,h=a.packedLength+2,p=a.packedLength+c.packedLength,m=c.packedLength+1,b={modelMatrix:new a,boundingVolume:new s};function k(e,t){let n=t*f,r=c.unpack(e,n,d);n+=c.packedLength;let o=a.unpack(e,n,b.modelMatrix);a.multiplyByScale(o,r,o);let i=b.boundingVolume;return c.clone(c.ZERO,i.center),i.radius=Math.sqrt(3),b}function g(e,t){let n=t*h,r=e[n++],o=e[n++],i=c.fromElements(r,r,o,d),s=a.unpack(e,n,b.modelMatrix);a.multiplyByScale(s,i,s);let l=b.boundingVolume;return c.clone(c.ZERO,l.center),l.radius=Math.sqrt(2),b}function I(e,t){let n=t*p,r=c.unpack(e,n,d);n+=c.packedLength;let o=a.unpack(e,n,b.modelMatrix);a.multiplyByScale(o,r,o);let i=b.boundingVolume;return c.clone(c.ZERO,i.center),i.radius=1,b}function y(e,t){let n=t*m,r=e[n++],o=c.unpack(e,n,d),i=a.fromTranslation(o,b.modelMatrix);a.multiplyByUniformScale(i,r,i);let s=b.boundingVolume;return c.clone(c.ZERO,s.center),s.radius=1,b}var x=new c;function B(t,n,r,o,i){if(!l(n))return;let d=r.length,f=o.attributes.position.values,h=o.indices,p=t.positions,m=t.vertexBatchIds,b=t.indices,k=t.batchIds,g=t.batchTableColors,I=t.batchedIndices,y=t.indexOffsets,B=t.indexCounts,w=t.boundingVolumes,A=t.modelMatrix,O=t.center,j=t.positionOffset,L=t.batchIdIndex,U=t.indexOffset,v=t.batchedIndicesOffset;for(let t=0;t<d;++t){let o=i(n,t),l=o.modelMatrix;a.multiply(A,l,l);let d=r[t],E=f.length;for(let e=0;e<E;e+=3){let t=c.unpack(f,e,x);a.multiplyByPoint(l,t,t),c.subtract(t,O,t),c.pack(t,p,3*j+e),m[L++]=d}let M=h.length;for(let e=0;e<M;++e)b[U+e]=h[e]+j;let C=t+v;I[C]=new u({offset:U,count:M,color:e.fromRgba(g[d]),batchIds:[d]}),k[C]=d,y[C]=U,B[C]=M,w[C]=s.transform(o.boundingVolume,l),j+=E/3,U+=M}t.positionOffset=j,t.batchIdIndex=L,t.indexOffset=U,t.batchedIndicesOffset+=d}var w=new c,A=new a,O=r(function(r,u){let d,f,h=l(r.boxes)?new Float32Array(r.boxes):void 0,p=l(r.boxBatchIds)?new Uint16Array(r.boxBatchIds):void 0,m=l(r.cylinders)?new Float32Array(r.cylinders):void 0,b=l(r.cylinderBatchIds)?new Uint16Array(r.cylinderBatchIds):void 0,x=l(r.ellipsoids)?new Float32Array(r.ellipsoids):void 0,O=l(r.ellipsoidBatchIds)?new Uint16Array(r.ellipsoidBatchIds):void 0,j=l(r.spheres)?new Float32Array(r.spheres):void 0,L=l(r.sphereBatchIds)?new Uint16Array(r.sphereBatchIds):void 0,U=l(h)?p.length:0,v=l(m)?b.length:0,E=l(x)?O.length:0,M=l(j)?L.length:0,C=o.getUnitBox(),T=t.getUnitCylinder(),V=n.getUnitEllipsoid(),R=C.attributes.position.values,S=T.attributes.position.values,F=V.attributes.position.values,N=R.length*U;N+=S.length*v+F.length*(E+M);let P=C.indices,Z=T.indices,J=V.indices,H=P.length*U;H+=Z.length*v+J.length*(E+M);let Q=new Float32Array(N),Y=new Uint16Array(N/3),G=i.createTypedArray(N/3,H),K=U+v+E+M,W=new Uint16Array(K),X=Array(K),q=new Uint32Array(K),D=new Uint32Array(K),_=Array(K);d=new Float64Array(r.packedBuffer),f=0,c.unpack(d,f,w),f+=c.packedLength,a.unpack(d,f,A);let z={batchTableColors:new Uint32Array(r.batchTableColors),positions:Q,vertexBatchIds:Y,indices:G,batchIds:W,batchedIndices:X,indexOffsets:q,indexCounts:D,boundingVolumes:_,positionOffset:0,batchIdIndex:0,indexOffset:0,batchedIndicesOffset:0,modelMatrix:A,center:w};B(z,h,p,C,k),B(z,m,b,T,g),B(z,x,O,V,I),B(z,j,L,V,y);let $=function(t,n,r){let o=r.length,i=new Float64Array(2+o*s.packedLength+1+function(t){let n=t.length,r=0;for(let o=0;o<n;++o)r+=e.packedLength+3+t[o].batchIds.length;return r}(n)),a=0;i[a++]=t,i[a++]=o;for(let e=0;e<o;++e)s.pack(r[e],i,a),a+=s.packedLength;let c=n.length;i[a++]=c;for(let t=0;t<c;++t){let r=n[t];e.pack(r.color,i,a),a+=e.packedLength,i[a++]=r.offset,i[a++]=r.count;let o=r.batchIds,s=o.length;i[a++]=s;for(let e=0;e<s;++e)i[a++]=o[e]}return i}(G.BYTES_PER_ELEMENT,X,_);return u.push(Q.buffer,Y.buffer,G.buffer),u.push(W.buffer,q.buffer,D.buffer),u.push($.buffer),{positions:Q.buffer,vertexBatchIds:Y.buffer,indices:G.buffer,indexOffsets:q.buffer,indexCounts:D.buffer,batchIds:W.buffer,packedBuffer:$.buffer}});export{O as default};