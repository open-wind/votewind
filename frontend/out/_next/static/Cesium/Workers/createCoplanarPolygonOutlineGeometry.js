import{a as e}from"./chunk-DZK6I6VG.js";import"./chunk-UYGXVO4A.js";import{a as r}from"./chunk-NHZSQ3M4.js";import"./chunk-4KTYBIT7.js";import{a as t}from"./chunk-PYEWQREH.js";import{a as n}from"./chunk-7Q53UG4E.js";import"./chunk-OFGHX2F3.js";import"./chunk-GT4KWHVH.js";import"./chunk-VRX6MZUH.js";import"./chunk-EMIRY7IE.js";import"./chunk-AKNTYFRF.js";import{a as o}from"./chunk-VKBMYYL4.js";import"./chunk-MQ2J7IEP.js";import"./chunk-LHHREGTA.js";import"./chunk-O2LOQWK4.js";import{a as i}from"./chunk-I4PVU2XE.js";import{a as s}from"./chunk-TMRGWDA2.js";import{b as a,c as p,d as c}from"./chunk-OST65WKL.js";import{d as u}from"./chunk-KLPRJ6SC.js";import"./chunk-4PT23TTH.js";import{a as m}from"./chunk-J4RA3VLE.js";import{a as h,d as l,f as y}from"./chunk-I4JBCTLR.js";import"./chunk-MCEXFPZL.js";import"./chunk-5IUKPU5Q.js";import"./chunk-B3NSNNUV.js";import{b as k}from"./chunk-BOXFFUY5.js";import{e as f}from"./chunk-OVZZEY7C.js";function j(e){let t=(e=e??y.EMPTY_OBJECT).polygonHierarchy;k.defined("options.polygonHierarchy",t),this._polygonHierarchy=t,this._workerName="createCoplanarPolygonOutlineGeometry",this.packedLength=r.computeHierarchyPackedLength(t,h)+1}j.fromPositions=function(e){return e=e??y.EMPTY_OBJECT,k.defined("options.positions",e.positions),new j({polygonHierarchy:{positions:e.positions}})},j.pack=function(e,t,n){return k.typeOf.object("value",e),k.defined("array",t),n=n??0,n=r.packPolygonHierarchy(e._polygonHierarchy,t,n,h),t[n]=e.packedLength,t};var d={polygonHierarchy:{}};j.unpack=function(e,t,n){k.defined("array",e),t=t??0;let o=r.unpackPolygonHierarchy(e,t,h);t=o.startingIndex,delete o.startingIndex;let i=e[t];return f(n)||(n=new j(d)),n._polygonHierarchy=o,n.packedLength=i,n},j.createGeometry=function(l){let y=l._polygonHierarchy,k=y.positions;if((k=o(k,h.equalsEpsilon,!0)).length<3||!e.validOutline(k))return;let f=r.polygonOutlinesFromHierarchy(y,!1);if(0===f.length)return;let j=[];for(let e=0;e<f.length;e++){let r=new t({geometry:function(e){let r=e.length,t=new Float64Array(3*r),n=i.createTypedArray(r,2*r),o=0,u=0;for(let i=0;i<r;i++){let s=e[i];t[o++]=s.x,t[o++]=s.y,t[o++]=s.z,n[u++]=i,n[u++]=(i+1)%r}return new p({attributes:new s({position:new c({componentDatatype:m.DOUBLE,componentsPerAttribute:3,values:t})}),indices:n,primitiveType:a.LINES})}(f[e])});j.push(r)}let d=n.combineInstances(j)[0],g=u.fromPoints(y.positions);return new p({attributes:d.attributes,indices:d.indices,primitiveType:d.primitiveType,boundingSphere:g})};var g=function(e,r){return f(r)&&(e=j.unpack(e,r)),e._ellipsoid=l.clone(e._ellipsoid),j.createGeometry(e)};export{g as default};