import{a as t}from"./chunk-GVXEIANZ.js";import{a as e}from"./chunk-HNJRTQHB.js";import{a as i}from"./chunk-I4PVU2XE.js";import{a as o}from"./chunk-TMRGWDA2.js";import{b as s,c as r,d as n}from"./chunk-OST65WKL.js";import{d as a}from"./chunk-KLPRJ6SC.js";import"./chunk-4PT23TTH.js";import{a as u}from"./chunk-J4RA3VLE.js";import{a as f,c as m,f as p}from"./chunk-I4JBCTLR.js";import"./chunk-MCEXFPZL.js";import"./chunk-5IUKPU5Q.js";import"./chunk-B3NSNNUV.js";import{a as c,b as l}from"./chunk-BOXFFUY5.js";import{e as b}from"./chunk-OVZZEY7C.js";var d=new m;function h(t){let i=(t=t??p.EMPTY_OBJECT).length,o=t.topRadius,s=t.bottomRadius,r=t.slices??128,n=Math.max(t.numberOfVerticalLines??16,0);if(l.typeOf.number("options.positions",i),l.typeOf.number("options.topRadius",o),l.typeOf.number("options.bottomRadius",s),l.typeOf.number.greaterThanOrEquals("options.slices",r,3),b(t.offsetAttribute)&&t.offsetAttribute===e.TOP)throw new c("GeometryOffsetAttribute.TOP is not a supported options.offsetAttribute for this geometry.");this._length=i,this._topRadius=o,this._bottomRadius=s,this._slices=r,this._numberOfVerticalLines=n,this._offsetAttribute=t.offsetAttribute,this._workerName="createCylinderOutlineGeometry"}h.packedLength=6,h.pack=function(t,e,i){return l.typeOf.object("value",t),l.defined("array",e),i=i??0,e[i++]=t._length,e[i++]=t._topRadius,e[i++]=t._bottomRadius,e[i++]=t._slices,e[i++]=t._numberOfVerticalLines,e[i]=t._offsetAttribute??-1,e};var _={length:void 0,topRadius:void 0,bottomRadius:void 0,slices:void 0,numberOfVerticalLines:void 0,offsetAttribute:void 0};h.unpack=function(t,e,i){l.defined("array",t),e=e??0;let o=t[e++],s=t[e++],r=t[e++],n=t[e++],a=t[e++],u=t[e];return b(i)?(i._length=o,i._topRadius=s,i._bottomRadius=r,i._slices=n,i._numberOfVerticalLines=a,i._offsetAttribute=-1===u?void 0:u,i):(_.length=o,_.topRadius=s,_.bottomRadius=r,_.slices=n,_.numberOfVerticalLines=a,_.offsetAttribute=-1===u?void 0:u,new h(_))},h.createGeometry=function(p){let c=p._length,l=p._topRadius,h=p._bottomRadius,_=p._slices,O=p._numberOfVerticalLines;if(c<=0||l<0||h<0||0===l&&0===h)return;let R=t.computePositions(c,l,h,_,!1),y=2*_,A;if(O>0){let t=Math.min(O,_);A=Math.round(_/t),y+=t}let k=i.createTypedArray(2*_,2*y),j=0,v;for(v=0;v<_-1;v++)k[j++]=v,k[j++]=v+1,k[j++]=v+_,k[j++]=v+1+_;if(k[j++]=_-1,k[j++]=0,k[j++]=_+_-1,k[j++]=_,O>0)for(v=0;v<_;v+=A)k[j++]=v,k[j++]=v+_;let L=new o;L.position=new n({componentDatatype:u.DOUBLE,componentsPerAttribute:3,values:R}),d.x=.5*c,d.y=Math.max(h,l);let T=new a(f.ZERO,m.magnitude(d));if(b(p._offsetAttribute)){c=R.length;let t=p._offsetAttribute===e.NONE?0:1,i=new Uint8Array(c/3).fill(t);L.applyOffset=new n({componentDatatype:u.UNSIGNED_BYTE,componentsPerAttribute:1,values:i})}return new r({attributes:L,indices:k,primitiveType:s.LINES,boundingSphere:T,offsetAttribute:p._offsetAttribute})};var O=function(t,e){return b(e)&&(t=h.unpack(t,e)),h.createGeometry(t)};export{O as default};